{
  "address": "0x91406f9Bf3397AcE2f2738c78244ab39e7c19a7A",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xf94f2d430cc0f5a6b7b0ffccc1cff7e5c35b058d3ba3cf3c13d375e594c259cb",
  "receipt": {
    "to": null,
    "from": "0x23fCcD37427809B01c5fE14c4b5A95131995eA25",
    "contractAddress": "0x91406f9Bf3397AcE2f2738c78244ab39e7c19a7A",
    "transactionIndex": 59,
    "gasUsed": "860518",
    "logsBloom": "0x
    "blockHash": "0x2da36aaa9578741de7b9ececec398182f02097ebf63445bb84a18c785706d4aa",
    "transactionHash": "0xf94f2d430cc0f5a6b7b0ffccc1cff7e5c35b058d3ba3cf3c13d375e594c259cb",
    "logs": [],
    "blockNumber": 8362381,
    "cumulativeGasUsed": "11911273",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e"
  ],
  "numDeployments": 1,
  "solcInputHash": "1dac5c36cf789e95ea8df49be5da695e",
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror NotOwner();\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    mapping(address => uint256) public addressToAmountFunded;\\n    address[] public funders;\\n\\n    // Could we make this constant?  /* hint: no! We should make it immutable! */\\n    address public  immutable i_owner;\\n    uint256 public constant MINIMUM_USD = 50 * 10 ** 18;\\n    AggregatorV3Interface public priceFeed;\\n    \\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    function fund() public payable {\\n        require(msg.value.getConversionRate(priceFeed) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        addressToAmountFunded[msg.sender] += msg.value;\\n        funders.push(msg.sender);\\n    }\\n    \\n    modifier onlyOwner {\\n        // require(msg.sender == owner);\\n        if (msg.sender != i_owner) revert NotOwner();\\n        _;\\n    }\\n    \\n    function withdraw() public onlyOwner {\\n        for (uint256 funderIndex=0; funderIndex < funders.length; funderIndex++){\\n            address funder = funders[funderIndex];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n        funders = new address[](0);\\n        // // transfer\\n        // payable(msg.sender).transfer(address(this).balance);\\n        // // send\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess, \\\"Send failed\\\");\\n        // call\\n        (bool callSuccess, ) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n    // Explainer from: https://solidity-by-example.org/fallback/\\n    // Ether is sent to contract\\n    //      is msg.data empty?\\n    //          /   \\\\ \\n    //         yes  no\\n    //         /     \\\\\\n    //    receive()?  fallback() \\n    //     /   \\\\ \\n    //   yes   no\\n    //  /        \\\\\\n    //receive()  fallback()\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n}\\n\\n// Concepts we didn't cover yet (will cover in later sections)\\n// 1. Enum\\n// 2. Events\\n// 3. Try / Catch\\n// 4. Function Selector\\n// 5. abi.encode / decode\\n// 6. Hash with keccak256\\n// 7. Yul / Assembly\\n\\n\\n\",\"keccak256\":\"0xa40a687d7933ac463bf643086aded530d2c7899cb6752315c3dd50657dda9b07\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\n// Why is this a library and not abstract?\\n// Why not an interface?\\nlibrary PriceConverter {\\n    // We could make this public, but then we'd have to deploy it\\n    function getPrice(AggregatorV3Interface priceFeed) internal view returns (uint256) {\\n        // Goerli ETH / USD Address\\n        // https://docs.chain.link/docs/ethereum-addresses/\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        // ETH/USD rate in 18 digit\\n        return uint256(answer * 10000000000);\\n        // or (Both will do the same thing)\\n        // return uint256(answer * 1e10); // 1* 10 ** 10 == 10000000000\\n    }\\n\\n    // 1000000000\\n    function getConversionRate( uint256 ethAmount, AggregatorV3Interface priceFeed) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n        // or (Both will do the same thing)\\n        // uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18; // 1 * 10 ** 18 == 1000000000000000000\\n        // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0xda3eb4796be290aaf6825fa684e08a6386950e2a480a45c17225e52480829d25\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b50604051610f8c380380610f8c833981810160405281019061003291906100c5565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610137565b6000815190506100bf81610120565b92915050565b6000602082840312156100d757600080fd5b60006100e5848285016100b0565b91505092915050565b60006100f982610100565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b610129816100ee565b811461013457600080fd5b50565b60805160601c610e3061015c600039600081816102e501526105bc0152610e306000f3fe6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a1461010c578063b60d428814610137578063dba6335f14610141578063dc0d3dff1461016c57610083565b80633ccfd60b1461008d5780633e47d6f3146100a45780636b69a592146100e157610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102e3565b005b3480156100b057600080fd5b506100cb60048036038101906100c69190610809565b61056f565b6040516100d891906109f3565b60405180910390f35b3480156100ed57600080fd5b506100f6610587565b60405161010391906109f3565b60405180910390f35b34801561011857600080fd5b50610121610594565b60405161012e9190610998565b60405180910390f35b61013f6101a9565b005b34801561014d57600080fd5b506101566105ba565b604051610163919061097d565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e9190610832565b6105de565b6040516101a0919061097d565b60405180910390f35b6802b5e3af16b18800006101e8600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461061d90919063ffffffff16565b1015610229576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610220906109d3565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102779190610a2a565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610368576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b600180549050811015610439576000600182815481106103b4577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061043190610ca2565b91505061036b565b50600067ffffffffffffffff81111561047b577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280602002602001820160405280156104a95781602001602082028036833780820191505090505b50600190805190602001906104bf9291906106f9565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104e690610968565b60006040518083038185875af1925050503d8060008114610523576040519150601f19603f3d011682016040523d82523d6000602084013e610528565b606091505b505090508061056c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610563906109b3565b60405180910390fd5b50565b60006020528060005260406000206000915090505481565b6802b5e3af16b188000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b600181815481106105ee57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061062983610659565b90506000670de0b6b3a764000085836106429190610bc8565b61064c9190610a80565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156106a257600080fd5b505afa1580156106b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106da919061085b565b5050509150506402540be400816106f19190610ab1565b915050919050565b828054828255906000526020600020908101928215610772579160200282015b828111156107715782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610719565b5b50905061077f9190610783565b5090565b5b8082111561079c576000816000905550600101610784565b5090565b6000813590506107af81610d9e565b92915050565b6000815190506107c481610db5565b92915050565b6000813590506107d981610dcc565b92915050565b6000815190506107ee81610dcc565b92915050565b60008151905061080381610de3565b92915050565b60006020828403121561081b57600080fd5b6000610829848285016107a0565b91505092915050565b60006020828403121561084457600080fd5b6000610852848285016107ca565b91505092915050565b600080600080600060a0868803121561087357600080fd5b6000610881888289016107f4565b9550506020610892888289016107b5565b94505060406108a3888289016107df565b93505060606108b4888289016107df565b92505060806108c5888289016107f4565b9150509295509295909350565b6108db81610c22565b82525050565b6108ea81610c7e565b82525050565b60006108fd600b83610a19565b915061090882610d49565b602082019050919050565b6000610920601b83610a19565b915061092b82610d72565b602082019050919050565b6000610943600083610a0e565b915061094e82610d9b565b600082019050919050565b61096281610c5e565b82525050565b600061097382610936565b9150819050919050565b600060208201905061099260008301846108d2565b92915050565b60006020820190506109ad60008301846108e1565b92915050565b600060208201905081810360008301526109cc816108f0565b9050919050565b600060208201905081810360008301526109ec81610913565b9050919050565b6000602082019050610a086000830184610959565b92915050565b600081905092915050565b600082825260208201905092915050565b6000610a3582610c5e565b9150610a4083610c5e565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610a7557610a74610ceb565b5b828201905092915050565b6000610a8b82610c5e565b9150610a9683610c5e565b925082610aa657610aa5610d1a565b5b828204905092915050565b6000610abc82610c34565b9150610ac783610c34565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610b0657610b05610ceb565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610b4357610b42610ceb565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610b8057610b7f610ceb565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610bbd57610bbc610ceb565b5b828202905092915050565b6000610bd382610c5e565b9150610bde83610c5e565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610c1757610c16610ceb565b5b828202905092915050565b6000610c2d82610c3e565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b6000610c8982610c90565b9050919050565b6000610c9b82610c3e565b9050919050565b6000610cad82610c5e565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610ce057610cdf610ceb565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b50565b610da781610c22565b8114610db257600080fd5b50565b610dbe81610c34565b8114610dc957600080fd5b50565b610dd581610c5e565b8114610de057600080fd5b50565b610dec81610c68565b8114610df757600080fd5b5056fea2646970667358221220bdf414c5dcc5f1cfcd9fbc3ac6b7d2e0f964690f7f3c8a0013ab1509db670ebc64736f6c63430008040033",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a1461010c578063b60d428814610137578063dba6335f14610141578063dc0d3dff1461016c57610083565b80633ccfd60b1461008d5780633e47d6f3146100a45780636b69a592146100e157610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102e3565b005b3480156100b057600080fd5b506100cb60048036038101906100c69190610809565b61056f565b6040516100d891906109f3565b60405180910390f35b3480156100ed57600080fd5b506100f6610587565b60405161010391906109f3565b60405180910390f35b34801561011857600080fd5b50610121610594565b60405161012e9190610998565b60405180910390f35b61013f6101a9565b005b34801561014d57600080fd5b506101566105ba565b604051610163919061097d565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e9190610832565b6105de565b6040516101a0919061097d565b60405180910390f35b6802b5e3af16b18800006101e8600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461061d90919063ffffffff16565b1015610229576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610220906109d3565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102779190610a2a565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610368576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b600180549050811015610439576000600182815481106103b4577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061043190610ca2565b91505061036b565b50600067ffffffffffffffff81111561047b577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280602002602001820160405280156104a95781602001602082028036833780820191505090505b50600190805190602001906104bf9291906106f9565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104e690610968565b60006040518083038185875af1925050503d8060008114610523576040519150601f19603f3d011682016040523d82523d6000602084013e610528565b606091505b505090508061056c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610563906109b3565b60405180910390fd5b50565b60006020528060005260406000206000915090505481565b6802b5e3af16b188000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b600181815481106105ee57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061062983610659565b90506000670de0b6b3a764000085836106429190610bc8565b61064c9190610a80565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156106a257600080fd5b505afa1580156106b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106da919061085b565b5050509150506402540be400816106f19190610ab1565b915050919050565b828054828255906000526020600020908101928215610772579160200282015b828111156107715782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610719565b5b50905061077f9190610783565b5090565b5b8082111561079c576000816000905550600101610784565b5090565b6000813590506107af81610d9e565b92915050565b6000815190506107c481610db5565b92915050565b6000813590506107d981610dcc565b92915050565b6000815190506107ee81610dcc565b92915050565b60008151905061080381610de3565b92915050565b60006020828403121561081b57600080fd5b6000610829848285016107a0565b91505092915050565b60006020828403121561084457600080fd5b6000610852848285016107ca565b91505092915050565b600080600080600060a0868803121561087357600080fd5b6000610881888289016107f4565b9550506020610892888289016107b5565b94505060406108a3888289016107df565b93505060606108b4888289016107df565b92505060806108c5888289016107f4565b9150509295509295909350565b6108db81610c22565b82525050565b6108ea81610c7e565b82525050565b60006108fd600b83610a19565b915061090882610d49565b602082019050919050565b6000610920601b83610a19565b915061092b82610d72565b602082019050919050565b6000610943600083610a0e565b915061094e82610d9b565b600082019050919050565b61096281610c5e565b82525050565b600061097382610936565b9150819050919050565b600060208201905061099260008301846108d2565b92915050565b60006020820190506109ad60008301846108e1565b92915050565b600060208201905081810360008301526109cc816108f0565b9050919050565b600060208201905081810360008301526109ec81610913565b9050919050565b6000602082019050610a086000830184610959565b92915050565b600081905092915050565b600082825260208201905092915050565b6000610a3582610c5e565b9150610a4083610c5e565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610a7557610a74610ceb565b5b828201905092915050565b6000610a8b82610c5e565b9150610a9683610c5e565b925082610aa657610aa5610d1a565b5b828204905092915050565b6000610abc82610c34565b9150610ac783610c34565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610b0657610b05610ceb565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610b4357610b42610ceb565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610b8057610b7f610ceb565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610bbd57610bbc610ceb565b5b828202905092915050565b6000610bd382610c5e565b9150610bde83610c5e565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610c1757610c16610ceb565b5b828202905092915050565b6000610c2d82610c3e565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b6000610c8982610c90565b9050919050565b6000610c9b82610c3e565b9050919050565b6000610cad82610c5e565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610ce057610cdf610ceb565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b50565b610da781610c22565b8114610db257600080fd5b50565b610dbe81610c34565b8114610dc957600080fd5b50565b610dd581610c5e565b8114610de057600080fd5b50565b610dec81610c68565b8114610df757600080fd5b5056fea2646970667358221220bdf414c5dcc5f1cfcd9fbc3ac6b7d2e0f964690f7f3c8a0013ab1509db670ebc64736f6c63430008040033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 58,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 61,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 73,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}